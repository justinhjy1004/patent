q()
q()
install.packages("tidyverse")
install.packages("tidyverse")
q()
install.packages('tidyverse')
library(tidyverse)
setwd("~/Jupyter/Patent")
df <- read_csv("inventor_sim.csv")
View(df)
lmod <- lm(hops~sim, df)
summary(lmod)
ggplot(df, aes(X1, sim, colour=hops)) +
geom_point()
ggplot(df, aes(hops, sim)) +
geom_point()
ggplot(df, aes(hops, sim)) +
geom_point(color="red") +
l
ggplot(df, aes(hops, sim)) +
geom_point(color="red")
ggplot(df, aes(hops, sim)) +
geom_point(color="red") +
theme_minimal()
ggplot(df, aes(hops, sim)) +
geom_point(color="red") +
geom_abline() +
theme_minimal()
ggplot(df, aes(hops, sim)) +
geom_point(color="red") +
geom_smooth() +
theme_minimal()
ggplot(df, aes(hops, sim)) +
geom_point(color="red") +
geom_smooth() +
ggtitle("Similarity Score v. Number of Hops") +
xlab("Number of Hops") +
ylab("Dot Product Similarity")
ggplot(df, aes(hops, sim)) +
geom_point(color="red") +
geom_smooth() +
ggtitle("Similarity Score v. Number of Hops") +
xlab("Number of Hops") +
ylab("Dot Product Similarity") +
theme_minimal()
mean_sim <- df %>%
group_by(hops) %>%
summarize(avg = mean(sim))
View(mean_sim)
df <- df[!is.na(df)]
df <- df[!is.na(df),]
df <- df[!is.na(df$sim),]
lmod <- lm(hops~sim, df)
summary(lmod)
ggplot(df, aes(hops, sim)) +
geom_point(color="red") +
geom_smooth() +
ggtitle("Similarity Score v. Number of Hops") +
xlab("Number of Hops") +
ylab("Dot Product Similarity") +
theme_minimal()
mean_sim <- df %>%
group_by(hops) %>%
summarize(avg = mean(sim))
View(mean_sim)
sd_sim <- df %>%
group_by(hops) %>%
summarize(sd = sd(sim))
View(sd_sim)
inventor_sim <- df %>%
group_by(hops, inventor) %>%
summarize(avg = mean(sim))
View(inventor_sim)
inventor_sim <- inventor_sim[inventor_sim$hops != 0,]
View(inventor_sim)
inventor_sim <- df %>%
group_by(inventor) %>%
summarize(avg = mean(sim))
View(inventor_sim)
version()
x <- 5
x <- 6
View(df)
library(tidyverse)
library(tidyverse)
?read_csv
?ggplot
df <- read_csv("inventor_sim.csv")
df = read_csv("inventor_sim.csv")
View(df)
df
View(df)
df[1,]
df[1,1]
df[2,]
df[3,]
df[4,]
df[,]
df[1,]
df[,5]
df$sim
View(df)
df[!is.na(df$sim),]
df <- df[!is.na(df$sim),]
df <- read_csv("inventor_sim.csv")
df <- df[!is.na(df$sim),]
lm(hops~sim, df)
lmod <- lm(sim~hops, df)
lmod.residuals
residuals(lmod)
coefficients(lmod)
summary(lmod)
hist(df$sim)
hist(df)
hist(df$hops)
barplot(df$hops)
bar(df$hops)
hist(df$hops)
hist(df$hops) + vline(x=5)
hist(df$hops) + abline(x=5)
hist(df$hops) + hline(x=5)
hist(df$hops) + hline(5)
ggplot(df, aes(hops, sim)) +
geom_point(color="red") +
geom_smooth() +
ggtitle("Similarity Score v. Number of Hops") +
xlab("Number of Hops") +
ylab("Dot Product Similarity") +
theme_minimal()
ggplot(data=df, aes(x=hops, y=sim)) +
geom_point(color="red") +
geom_smooth() +
ggtitle("Similarity Score v. Number of Hops") +
xlab("Number of Hops") +
ylab("Dot Product Similarity") +
theme_minimal()
ggplot(data=df, aes(x=hops, y=sim)) +
geom_abline(aes(x=5)) +
geom_point(color="red") +
geom_smooth() +
ggtitle("Similarity Score v. Number of Hops") +
xlab("Number of Hops") +
ylab("Dot Product Similarity") +
theme_minimal()
ggplot(data=df, aes(x=hops, y=sim)) +
geom_abline(aes(x=1)) +
geom_point(color="red") +
geom_smooth() +
ggtitle("Similarity Score v. Number of Hops") +
xlab("Number of Hops") +
ylab("Dot Product Similarity") +
theme_minimal()
ggplot(data=df, aes(x=hops, y=sim)) +
geom_point(color="red") +
geom_smooth() +
ggtitle("Similarity Score v. Number of Hops") +
xlab("Number of Hops") +
ylab("Dot Product Similarity") +
theme_minimal()
ggplot(data=df, aes(x=hops, y=sim)) +
geom_point(color="red") +
geom_smooth() +
ggtitle("Similarity Score v. Number of Hops") +
xlab("Number of Hops") +
ylab("Dot Product Similarity")
ggplot(data=df, aes(x=hops, y=sim)) +
geom_point(color="red") +
geom_smooth() +
ggtitle("Similarity Score v. Number of Hops") +
xlab("Number of Hops") +
ylab("Dot Product Similarity") +
theme_minimal()
mean_sim <- df %>%
group_by(hops) %>%
summarize(avg = mean(sim))
View(mean_sim)
sd_sim <- df %>%
group_by(hops) %>%
summarize(sd = sd(sim))
View(sd_sim)
inventor_sim <- df %>%
group_by(inventor,hop) %>%
summarize(avg = mean(sim))
inventor_sim <- df %>%
group_by(inventor,hops) %>%
summarize(avg = mean(sim))
View(inventor_sim)
inventor_sim <- df %>%
group_by(inventor) %>%
summarize(avg = mean(sim))
View(inventor_sim)
inventor_sim <- df %>%
group_by(inventor,hops) %>%
summarize(avg = mean(sim))
View(inventor_sim)
inventor_sim <- inventor_sim[inventor_sim$hops != 0,]
View(inventor_sim)
